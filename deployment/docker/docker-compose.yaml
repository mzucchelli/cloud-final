version: "3"
services:   
  tracker-backend:
    image: mzucc/tracker-backend
    ports:
    - "3000:3000"
    volumes:
      - ../../backend:/app
    environment:
      POSTGRES_USERNAME: $POSTGRES_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD 
      POSTGRES_DB: $POSTGRES_DB 
      POSTGRES_HOST: $POSTGRES_HOST 
      AWS_REGION: $AWS_REGION
      AWS_COGNITO_USERPOOLID: $AWS_COGNITO_USERPOOLID
      AWS_COGNITO_CLIENTID: $AWS_COGNITO_CLIENTID
      API_URL: $API_URL
      URL: $URL
      TOKEN_USE: $TOKEN_USE
      TOKEN_EXPIRATION: $TOKEN_EXPIRATION
  tracker-frontend:
    image: mzucc/tracker-frontend
    ports:
    - "5173:5173"
    volumes:
      - ../../frontend:/app
    environment:
      VITE_AWS_REGION: $AWS_REGION 
      VITE_AWS_COGNITO_USERPOOLID: $AWS_COGNITO_USERPOOLID
      VITE_AWS_COGNITO_CLIENTID: $AWS_COGNITO_CLIENTID
      VITE_API_URL: $API_URL
  db:
    container_name: postgres
    image: postgres
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
    - db:/data/postgres
    ports:
    - "5432:5432"
    restart: always
    # healthcheck:
    #   test: [ "CMD-SHELL", "pg_isready -d postgres" ]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
    - 8020:8080
volumes:
  db:
